/*-----------------------------------------------------*/
/* NIVEL 1 - APURACAO DOS DADOS POR GRADE E EMPRESA    */
/* TOTALIZA AS FREQUENCIAS DOS PRODUTO (SE NECESSARIO) */
/*-----------------------------------------------------*/
WITH NIVEL_1 AS (
  SELECT
    P.COD_PRODUTO,
    E.COD_EMPRESA,
    P.COD_MARCA,
    P.COD_FAMILIA,
    P.COD_GRUPRO,
    P.NUM_PRODUTO,
    P.NUM_REFER_FABRICANTE_PRODUTO,
    P.DES_PRODUTO,
    P.SIG_UNIDADE,
    P.TIP_CURVA_ABC_PRODUTO,
    P.TIP_SITUACAO_PRODUTO,
    P.QTD_TRANSFERENCIA_PRODUTO,
    M.DES_MARCA,
    U.LOG_QTD_FRAC_UNIDADE,
    PE.QTD_ESTOQUE_MIN_PRODUTO,
    PE.QTD_ESTOQUE_PROEST,
    PE.QTD_ARMAZENAGEM_PROEST,
    PE_EMP.VAL_CUSTO_PROEST VAL_CUSTO_LOGADA,
    FGC.COD_GERCOM,
    FGC.TIP_CALCULO_GERCOM,
    COALESCE(FGC.VAL_MAX_CUSTO_PROD_GERCOM, 0) VAL_MAX_CUSTO_PROD_GERCOM,
    (CASE WHEN (E.COD_EMPRESA = 1) THEN PE.QTD_RESERVADA_PROEST ELSE 0 END) QTD_RESERVA_EMPRESA_LOGADA,
    (CASE WHEN (E.COD_EMPRESA = 1) THEN PLA2.QTD_PROLOCALT ELSE 0 END) QTD_ESTOQUE_LOCAL_INFORMADO,

    (CASE WHEN ((E.COD_EMPRESA = 2) AND
               ((FGC.TIP_CALCULO_GERCOM = 2) OR ((FGC.TIP_CALCULO_GERCOM = 4) AND (PE_EMP.VAL_CUSTO_PROEST > COALESCE(FGC.VAL_MAX_CUSTO_PROD_GERCOM, 0))))) THEN
      (SELECT
       COALESCE(SUM(PGM.QTD_FREQ_PROGIRMED), 0)
      FROM
        PRODUTOS_GIRO_MEDIO PGM
      WHERE
        (PGM.COD_PROGRA = PG.COD_PROGRA) AND
        (PGM.COD_GIRMEDDIA = FGC.COD_GIRMEDDIA_FREQUENCIA) AND
        (PGM.COD_EMPRESA = E.COD_EMPRESA))
    ELSE 
      0
    END) QTD_FREQ_PROGIRMED
  FROM
    PRODUTOS P
    LEFT JOIN (SELECT E.COD_EMPRESA, E.COD_PESSOA_GERAR_TRANS_EMPRESA FROM EMPRESAS E WHERE E.LOG_ATIVO_EMPRESA = -1 ORDER BY E.COD_EMPRESA) E ON (1=1)
    LEFT JOIN MARCAS M ON M.COD_MARCA = P.COD_MARCA
    LEFT JOIN UNIDADES U ON U.SIG_UNIDADE = P.SIG_UNIDADE
    LEFT JOIN PRODUTOS_GRADE PG ON PG.COD_PRODUTO = P.COD_PRODUTO
    LEFT JOIN PRODUTOS_ESTOQUES PE ON PE.COD_EMPRESA = E.COD_EMPRESA AND PE.COD_PROGRA = PG.COD_PROGRA
    LEFT JOIN LOCAIS_ARMAZENAGEM LA ON LA.COD_LOCARM = PE.COD_LOCARM
    LEFT JOIN FILTROS_GERADOR_COMPRAS FGC ON (FGC.COD_GERCOM = 257) AND (FGC.TIP_FILTRO_GERCOM = 'T')
    LEFT JOIN PRODUTOS_ESTOQUES PE_EMP ON (PE_EMP.COD_PROGRA = PG.COD_PROGRA) AND (PE_EMP.COD_EMPRESA = 1)
    LEFT JOIN PRODUTOS_LOCAIS_ALTERNATIVOS PLA2 ON (PLA2.COD_PROGRA = PE.COD_PROGRA) AND (PLA2.COD_EMPRESA = 1) AND (PLA2.COD_TIPLOCARM = 1)
    
    
  WHERE
    (UPPER(P.NUM_PRODUTO) >= '10094717') AND 
		(UPPER(P.NUM_PRODUTO) <= '10094717') AND 
		(P.COD_FAMILIA IN (14,1,8,5,7,6,9)) AND 
		(P.TIP_SITUACAO_PRODUTO IN ('2')) AND 
		((P.TIP_CURVA_ABC_PRODUTO IN ('A','B','C','D','E','F','G','X')) OR (P.TIP_CURVA_ABC_PRODUTO IS NULL)) AND 
		(PLA2.QTD_PROLOCALT > 0) AND 
		(NOT EXISTS (SELECT LAE.COD_LOCARMEMP FROM PRODUTOS_ESTOQUES PROEST, LOCAIS_ARMAZENAGEM_EMPRESAS LAE WHERE (PROEST.COD_PROGRA = PG.COD_PROGRA) AND (PROEST.COD_EMPRESA = 2) AND (PROEST.QTD_ESTOQUE_MIN_PRODUTO <= 0) AND (PROEST.COD_LOCARM = LAE.COD_LOCARM) AND (PROEST.COD_EMPRESA = LAE.COD_EMPRESA) AND (LAE.LOG_NAOTRANSFESTMIN_LOCARMEMP = -1)))
    AND ((0 = -1) OR  (PE_EMP.QTD_ESTOQUE_PROEST > 0))
    AND ((FGC.TIP_CALCULO_GERCOM <> 3) OR ((PE_EMP.VAL_CUSTO_PROEST > 0) AND (PE_EMP.VAL_CUSTO_PROEST <= COALESCE(FGC.VAL_MAX_CUSTO_PROD_GERCOM, 0))))
  ORDER BY
    P.COD_PRODUTO)


/*--------------------------------------------------------*/
/* NIVEL 3                                                */
/* - LISTAGEM DOS CAMPOS NO NIVEL 2                       */
/* - TOTALIZACAO DA MOVIMENTACAO                          */
/*--------------------------------------------------------*/
SELECT
  NIVEL_2.*,

  /* DADOS EMPRESA LOGADA */

  (SELECT
    COALESCE(SUM(PGM.QTD_PROGIRMED), 0)
  FROM
    PRODUTOS_GIRO_MEDIO PGM
  WHERE
    (PGM.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
    (PGM.COD_GIRMEDDIA = (CASE WHEN (PP.COD_GIRMEDDIA_GERCOMFRE IS NOT NULL) THEN PP.COD_GIRMEDDIA_GERCOMFRE ELSE CAST(NULL AS INTEGER) END)) AND
    (PGM.COD_EMPRESA = 1)) QTD_MOVTOS_LOGADA,

  (SELECT
    COALESCE(SUM(PGM.QTD_PROGIRMED), 0)
  FROM
    PRODUTOS_GIRO_MEDIO PGM
  WHERE
    (PGM.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
    (PGM.COD_GIRMEDDIA = (CASE WHEN (PP.COD_GIRMEDDIA_PROJ_GERCOMFRE IS NOT NULL) THEN PP.COD_GIRMEDDIA_PROJ_GERCOMFRE ELSE CAST(NULL AS INTEGER) END)) AND
    (PGM.COD_EMPRESA = 1)) QTD_MOVTOS_PROJECAO_LOGADA,

  (CASE WHEN (EMPLOG.COD_PESSOA_GERAR_TRANS_EMPRESA IS NOT NULL) THEN
    (SELECT
      COALESCE(SUM(PVI.QTD_PEDIDA_PVEITE - PVI.QTD_FATURADA_PVEITE), 0) QTD_SALDO
    FROM
      PVE_ITENS PVI
    WHERE
      (PVI.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
      ((PVI.QTD_PEDIDA_PVEITE - PVI.QTD_FATURADA_PVEITE) > 0) AND
      (PVI.LOG_CANCELADO_PVEITE = 0) AND
      (EXISTS (SELECT PVE.COD_PVE
              FROM PVE
              WHERE
                (PVE.COD_PVE = PVI.COD_PVE) AND
                (PVE.COD_EMPRESA = 1) AND
                (PVE.LOG_PEDTRANSF = -1) AND
                (PVE.TIP_SITUACAO_PVE NOT IN ('T', 'C')) AND
                (PVE.LOG_RESERVADO_PVE = 0)
                
               
     )))
  ELSE 0 END) QTD_TRANSF_EMITIDO_LOGADA,

  (SELECT
    COALESCE(SUM(PVI.QTD_PEDIDA_PVEITE - PVI.QTD_FATURADA_PVEITE), 0) QTD_SALDO
  FROM
    PVE_ITENS PVI
  WHERE
    (PVI.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
    ((PVI.QTD_PEDIDA_PVEITE - PVI.QTD_FATURADA_PVEITE) > 0) AND
    (PVI.LOG_CANCELADO_PVEITE = 0) AND
    (EXISTS (SELECT PVE.COD_PVE
            FROM PVE
            WHERE
              (PVE.COD_PVE = PVI.COD_PVE) AND
              (PVE.COD_PESSOA_CLIENTE = EMPLOG.COD_PESSOA_GERAR_TRANS_EMPRESA) AND
              (PVE.LOG_PEDTRANSF = -1) AND
              (PVE.TIP_SITUACAO_PVE NOT IN ('T', 'C'))))
  ) QTD_TRANSF_LOGADA,

  (CASE WHEN (-1 = -1) THEN
    (SELECT
      COALESCE(SUM(PLA.QTD_PROLOCALT), 0)
    FROM
      PRODUTOS_LOCAIS_ALTERNATIVOS PLA,
      TIPOS_LOCAIS_ARMAZENAGEM TLA
    WHERE
      (PLA.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
      (PLA.COD_EMPRESA = 1) AND
      (PLA.COD_TIPLOCARM = TLA.COD_TIPLOCARM) AND
      (TLA.LOG_DIMINUIR_TRANSF_TIPLOCARM = -1 AND TLA.LOG_DIMINUIR_COMPRAS_TIPLOCARM = 0))
  ELSE 0 END) QTD_ESTOQUE_NAOTRANSF_LOGADA,

  (CASE WHEN (-1 = -1) THEN
    (SELECT
      COALESCE(SUM(PLA.QTD_PROLOCALT), 0)
    FROM
      PRODUTOS_LOCAIS_ALTERNATIVOS PLA,
      TIPOS_LOCAIS_ARMAZENAGEM TLA
    WHERE
      (PLA.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
      (PLA.COD_EMPRESA = 1) AND
      (PLA.COD_TIPLOCARM = TLA.COD_TIPLOCARM) AND
      (TLA.LOG_DIMINUIR_COMPRAS_TIPLOCARM = -1))
  ELSE 0 END) QTD_PROLOCALT_LOGADA,

  /* DADOS TODAS EMPRESAS ATIVAS */

  (SELECT
    COALESCE(SUM(PGM.QTD_PROGIRMED), 0)
  FROM
    PRODUTOS_GIRO_MEDIO PGM,
    EMPRESAS E
  WHERE
    (PGM.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
    (PGM.COD_GIRMEDDIA = (CASE WHEN (PP.COD_GIRMEDDIA_GERCOMFRE IS NOT NULL) THEN PP.COD_GIRMEDDIA_GERCOMFRE ELSE CAST(NULL AS INTEGER) END)) AND
    (PGM.COD_EMPRESA = E.COD_EMPRESA AND E.LOG_ATIVO_EMPRESA = -1)) QTD_MOVTOS_EMP,

  (SELECT
    COALESCE(SUM(PGM.QTD_PROGIRMED), 0)
  FROM
    PRODUTOS_GIRO_MEDIO PGM,
    EMPRESAS E
  WHERE
    (PGM.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
    (PGM.COD_GIRMEDDIA = (CASE WHEN (PP.COD_GIRMEDDIA_PROJ_GERCOMFRE IS NOT NULL) THEN PP.COD_GIRMEDDIA_PROJ_GERCOMFRE ELSE CAST(NULL AS INTEGER) END)) AND
    (PGM.COD_EMPRESA = E.COD_EMPRESA AND E.LOG_ATIVO_EMPRESA = -1)) QTD_MOVTOS_PROJECAO_EMP,

  CAST(0 AS NUMERIC(15,6)) QTD_TRANSF_EMP,

  (CASE WHEN (-1 = -1) THEN
    (SELECT
      COALESCE(SUM(PLA.QTD_PROLOCALT), 0)
    FROM
      PRODUTOS_LOCAIS_ALTERNATIVOS PLA,
      TIPOS_LOCAIS_ARMAZENAGEM TLA,
      EMPRESAS E
    WHERE
      (PLA.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
      (PLA.COD_EMPRESA = E.COD_EMPRESA) AND
      (E.LOG_ATIVO_EMPRESA = -1) AND
      (PLA.COD_TIPLOCARM = TLA.COD_TIPLOCARM) AND
      (TLA.LOG_DIMINUIR_COMPRAS_TIPLOCARM = -1))
  ELSE 0 END) QTD_PROLOCALT_EMP,

  /* DADOS EMPRESAS SELECIONADAS */

  (SELECT
    COALESCE(SUM(PGM.QTD_PROGIRMED), 0)
  FROM
    PRODUTOS_GIRO_MEDIO PGM
  WHERE
    (PGM.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
    (PGM.COD_GIRMEDDIA = (CASE WHEN (PP.COD_GIRMEDDIA_GERCOMFRE IS NOT NULL) THEN PP.COD_GIRMEDDIA_GERCOMFRE ELSE CAST(NULL AS INTEGER) END)) AND
    (PGM.COD_EMPRESA = 2)) QTD_MOVTOS_SEL,

  (SELECT
    COALESCE(SUM(PGM.QTD_PROGIRMED), 0)
  FROM
    PRODUTOS_GIRO_MEDIO PGM
  WHERE
    (PGM.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
    (PGM.COD_GIRMEDDIA = (CASE WHEN (PP.COD_GIRMEDDIA_PROJ_GERCOMFRE IS NOT NULL) THEN PP.COD_GIRMEDDIA_PROJ_GERCOMFRE ELSE CAST(NULL AS INTEGER) END)) AND
    (PGM.COD_EMPRESA = 2)) QTD_MOVTOS_PROJECAO_SEL,

  (SELECT
    COALESCE(SUM(PVI.QTD_PEDIDA_PVEITE - PVI.QTD_FATURADA_PVEITE), 0)
  FROM
    PVE_ITENS PVI
  WHERE
    (PVI.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
    ((PVI.QTD_PEDIDA_PVEITE - PVI.QTD_FATURADA_PVEITE) > 0) AND
    (PVI.LOG_CANCELADO_PVEITE = 0) AND
    (EXISTS (SELECT PVE.COD_PVE
             FROM PVE
             WHERE
              (PVE.COD_PVE = PVI.COD_PVE) AND
              (PVE.COD_PESSOA_CLIENTE = EMPSEL.COD_PESSOA_GERAR_TRANS_EMPRESA) AND
              (PVE.LOG_PEDTRANSF = -1) AND
              (PVE.TIP_SITUACAO_PVE NOT IN ('T', 'C'))))
  ) QTD_TRANSF_SEL,

  (SELECT
    COALESCE(SUM(PLA.QTD_PROLOCALT), 0)
  FROM
    PRODUTOS_LOCAIS_ALTERNATIVOS PLA,
    TIPOS_LOCAIS_ARMAZENAGEM TLA
  WHERE
    (PLA.COD_EMPRESA = 2) AND
    (PLA.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
    (PLA.COD_TIPLOCARM = TLA.COD_TIPLOCARM) AND
    (TLA.LOG_ESTOQUE_INDISP_TIPLOCARM = -1) AND
    (TLA.LOG_DIMINUIR_TRANSF_TIPLOCARM = 0)) QTD_ESTOQUES_ALTERNATIVOS_SEL,

  (CASE WHEN (EMPSEL.COD_PESSOA_GERAR_TRANS_EMPRESA IS NOT NULL) THEN
    (SELECT
      COALESCE(SUM(PVI.QTD_PEDIDA_PVEITE - PVI.QTD_FATURADA_PVEITE), 0)
    FROM
      PVE_ITENS PVI
    WHERE
      (PVI.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
      ((PVI.QTD_PEDIDA_PVEITE - PVI.QTD_FATURADA_PVEITE) > 0) AND
      (PVI.LOG_CANCELADO_PVEITE = 0) AND
      (EXISTS (SELECT PVE.COD_PVE
              FROM PVE
              WHERE
                (PVE.COD_PVE = PVI.COD_PVE) AND
                (PVE.COD_EMPRESA = 2) AND
                (PVE.LOG_PEDTRANSF = -1) AND
                (PVE.TIP_SITUACAO_PVE NOT IN ('T', 'C')))))
  ELSE
    0
  END) QTD_TRANSF_EMITIDO_SEL,

  (CASE WHEN (-1 = -1) THEN
    (SELECT
      COALESCE(SUM(PLA.QTD_PROLOCALT), 0)
    FROM
      PRODUTOS_LOCAIS_ALTERNATIVOS PLA,
      TIPOS_LOCAIS_ARMAZENAGEM TLA
    WHERE
      (PLA.COD_PROGRA = NIVEL_2.COD_PROGRA) AND
      (PLA.COD_EMPRESA = 2) AND
      (PLA.COD_TIPLOCARM = TLA.COD_TIPLOCARM) AND
      (TLA.LOG_DIMINUIR_COMPRAS_TIPLOCARM = -1))
  ELSE 0 END) QTD_PROLOCALT_SEL,

  /* OUTROS DADOS (INDEPENDENTE DA EMPRESA) */
  (SELECT PG.QTD_DUN14_PROGRA FROM PRODUTOS_GRADE PG WHERE PG.COD_PROGRA = NIVEL_2.COD_PROGRA) QTD_DUN14_PROGRA,

  (CASE WHEN (0 = -1) THEN
    (SELECT
      SUM(CNI.QTD_FATURADA_NFITE)
    FROM
      CONFERENCIA_NFE CN
      LEFT JOIN CONFERENCIA_NFE_NOTAS CNN ON CNN.COD_CONNFE = CN.COD_CONNFE
      LEFT JOIN NFE_ITENS CNI ON CNI.COD_NFE = CNN.COD_NFE AND CNI.COD_PRODUTO = NIVEL_2.COD_PRODUTO
    WHERE
      CN.COD_CONNFE = CAST(NULL AS INTEGER))
  ELSE 0 END) QTD_NOTAS_ENTRADA_TRANSF,

  /* FAIXA DE FREQUENCIA */
  PP.TIP_FAIXA_GERCOMFRE,
  PP.NUM_FREQ_GERCOMFRE,
  PP.VAL_FREQ_GERCOMFRE,
  PP.NUM_DIAS_ESTOQUE_GERCOMFRE,
  PP.NUM_DIAS_PONTOREP_GERCOMFRE,
  PP.NUM_DIAS_CALCULO_GIRMEDDIA,
  PP.NUM_DIAS_CALCULO_PROJ_GIRMEDDIA,
  PP.COD_GIRMEDDIA_GERCOMFRE,
  PP.COD_GIRMEDDIA_PROJ_GERCOMFRE,

  /* EMPRESA MAIOR MOVIMENTACAO */
  C.COD_EMPRESA COD_EMPRESA_MAIOR_MOVTO
FROM
  (
    /*--------------------------------------------------------*/
    /* NIVEL 2 - AGRUPAMENTO POR PRODUTO ONDE E APLICADO:     */
    /* - TOTALIZADORES PARA AS EMPRESAS SELECIONADAS          */
    /* - TOTALIZADORES PARA AS EMPRESA LOGADA                 */
    /* - TOTALIZADORES PARA TODAS AS EMPRESAS ATIVAS          */
    /*--------------------------------------------------------*/
    SELECT
      NIVEL_1.COD_PRODUTO,
      NIVEL_1.COD_MARCA,
      NIVEL_1.COD_FAMILIA,
      NIVEL_1.COD_GRUPRO,
      NIVEL_1.NUM_PRODUTO,
      NIVEL_1.NUM_REFER_FABRICANTE_PRODUTO,
      NIVEL_1.DES_PRODUTO,
      NIVEL_1.SIG_UNIDADE,
      NIVEL_1.TIP_CURVA_ABC_PRODUTO,
      NIVEL_1.TIP_SITUACAO_PRODUTO,
      NIVEL_1.QTD_TRANSFERENCIA_PRODUTO,
      NIVEL_1.DES_MARCA,
      NIVEL_1.LOG_QTD_FRAC_UNIDADE,
      NIVEL_1.VAL_CUSTO_LOGADA,
      NIVEL_1.COD_GERCOM,
      NIVEL_1.TIP_CALCULO_GERCOM,
      NIVEL_1.VAL_MAX_CUSTO_PROD_GERCOM,

      (SELECT FIRST 1 PG.COD_PROGRA FROM PRODUTOS_GRADE PG WHERE PG.COD_PRODUTO = NIVEL_1.COD_PRODUTO) COD_PROGRA,

      -- DADOS EMPRESA LOGADA
      SUM(CASE WHEN (NIVEL_1.COD_EMPRESA = 1) THEN NIVEL_1.QTD_ESTOQUE_MIN_PRODUTO ELSE 0 END) QTD_ESTOQUE_MIN_LOGADA,
      SUM(CASE WHEN (NIVEL_1.COD_EMPRESA = 1) THEN NIVEL_1.QTD_ESTOQUE_PROEST ELSE 0 END) QTD_ESTOQUE_LOGADA,
      SUM(CASE WHEN (NIVEL_1.COD_EMPRESA = 1) THEN NIVEL_1.QTD_RESERVA_EMPRESA_LOGADA ELSE 0 END) QTD_RESERVA_EMPRESA_LOGADA,
    
      -- DADOS TODAS EMPRESAS ATIVAS
      SUM(NIVEL_1.QTD_ESTOQUE_MIN_PRODUTO) QTD_ESTOQUE_MIN_EMP,
      SUM(NIVEL_1.QTD_ESTOQUE_PROEST) QTD_ESTOQUE_EMP,

      -- DADOS EMPRESAS SELECIONADAS
      SUM(CASE WHEN (NIVEL_1.COD_EMPRESA = 2) THEN NIVEL_1.QTD_ESTOQUE_MIN_PRODUTO ELSE 0 END) QTD_ESTOQUE_MIN_SEL,
      SUM(CASE WHEN (NIVEL_1.COD_EMPRESA = 2) THEN NIVEL_1.QTD_ESTOQUE_PROEST ELSE 0 END) QTD_ESTOQUE_SEL,
      SUM(CASE WHEN (NIVEL_1.COD_EMPRESA = 2) THEN NIVEL_1.QTD_ARMAZENAGEM_PROEST ELSE 0 END) QTD_ARMAZENAGEM_PROEST_SEL,

      SUM(COALESCE(NIVEL_1.QTD_ESTOQUE_LOCAL_INFORMADO, 0)) QTD_ESTOQUE_LOCAL_INFORMADO,
      SUM(NIVEL_1.QTD_FREQ_PROGIRMED) QTD_FREQ_PROGIRMED
    FROM
      NIVEL_1
    GROUP BY
      NIVEL_1.COD_PRODUTO,
      NIVEL_1.COD_MARCA,
      NIVEL_1.COD_FAMILIA,
      NIVEL_1.COD_GRUPRO,
      NIVEL_1.NUM_PRODUTO,
      NIVEL_1.NUM_REFER_FABRICANTE_PRODUTO,
      NIVEL_1.DES_PRODUTO,
      NIVEL_1.SIG_UNIDADE,
      NIVEL_1.TIP_CURVA_ABC_PRODUTO,
      NIVEL_1.TIP_SITUACAO_PRODUTO,
      NIVEL_1.QTD_TRANSFERENCIA_PRODUTO,
      NIVEL_1.DES_MARCA,
      NIVEL_1.LOG_QTD_FRAC_UNIDADE,
      NIVEL_1.VAL_CUSTO_LOGADA,
      NIVEL_1.COD_GERCOM,
      NIVEL_1.TIP_CALCULO_GERCOM,
      NIVEL_1.VAL_MAX_CUSTO_PROD_GERCOM
    HAVING
      /* CALCULO PADRAO */
      ((NIVEL_1.TIP_CALCULO_GERCOM = 1) OR

      /* CALCULO POR FREQUENCIA */
      ((NIVEL_1.TIP_CALCULO_GERCOM = 2) AND ((SUM(NIVEL_1.QTD_ESTOQUE_MIN_PRODUTO) > 0) OR (SUM(NIVEL_1.QTD_FREQ_PROGIRMED) > 0))) OR

      /* CALCULO POR VALOR */
      (NIVEL_1.TIP_CALCULO_GERCOM = 3) OR

      /* CALCULO POR VALOR + FREQUENCIA */
      ((NIVEL_1.TIP_CALCULO_GERCOM = 4) AND ((SUM(NIVEL_1.QTD_ESTOQUE_MIN_PRODUTO) > 0) OR (NIVEL_1.VAL_CUSTO_LOGADA > 0) OR
      ((NIVEL_1.VAL_CUSTO_LOGADA > NIVEL_1.VAL_MAX_CUSTO_PROD_GERCOM) AND (SUM(NIVEL_1.QTD_FREQ_PROGIRMED) > 0)))))

  ) NIVEL_2
  LEFT JOIN PEGAR_FREQ_COMPRAS_PROD(NIVEL_2.COD_GERCOM, NIVEL_2.QTD_FREQ_PROGIRMED, NIVEL_2.VAL_CUSTO_LOGADA) PP ON (NIVEL_2.TIP_CALCULO_GERCOM IN (2,3,4))
  LEFT JOIN EMPRESAS EMPLOG ON (EMPLOG.COD_EMPRESA = 1)
  LEFT JOIN EMPRESAS EMPSEL ON (EMPSEL.COD_EMPRESA = 2)
  LEFT JOIN CALCULAR_EMP_MAIOR_MOVIMENTACAO(NIVEL_2.COD_PROGRA, (CASE WHEN (PP.COD_GIRMEDDIA_GERCOMFRE IS NOT NULL) THEN PP.COD_GIRMEDDIA_GERCOMFRE ELSE CAST(NULL AS INTEGER) END)) C ON (1=1)
  LEFT JOIN EMPRESAS EMP_MOVTO ON (EMP_MOVTO.COD_EMPRESA = C.COD_EMPRESA) AND (EMP_MOVTO.COD_EMPRESA NOT IN (1, 2))
ORDER BY
  NIVEL_2.DES_MARCA,
  NIVEL_2.NUM_REFER_FABRICANTE_PRODUTO